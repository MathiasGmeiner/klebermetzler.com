---
import type { Page } from "@/types";
import { Image } from "astro:assets";
import iconList from "@/images/iconList.svg";
import iconGrid from "@/images/iconGrid.svg";
import Wrapper from "@components/Wrapper.astro";
import iconClose from "@/images/iconClose.svg";
import CustomPicture from "@components/CustomPicture.astro";

const page: Page = Astro.props.page;
---

{
  page.content.overlay && (
    <div class="overlay-wrapper overlay-hidden">
      <div class="overlay-content-wrapper">
        <button data-overlay-close class="button" arial-label="Close Overlay">
          <Image src={iconClose} alt="Close Overlay" />
        </button>
        <div class="overlay-content">
          <div set:html={page.content.overlay.text} />
        </div>
      </div>
    </div>
  )
}
<Wrapper>
  <div class="relative">
    <div class="list-toggle-mobile">
      <div class="buttons">
        <button data-trigger-style-grid arial-label="Raster">
          <Image src={iconGrid} alt="Icon Raster" />
        </button>
        <button data-trigger-style-list aria-label="Liste">
          <Image src={iconList} alt="Icon Liste" />
        </button>
      </div>
    </div>
    <h1 class="fd-headbold headline" set:html={page.content.headline} />
    <ul data-list class="project-list grid">
      <li class="placeholder"></li>
      <li class="placeholder"></li>
      <li class="placeholder"></li>
      <li class="placeholder"></li>
      {
        page.content.items.map((item, index) => {
          if (!item.image) {
            return null;
          }

          const ratio = item.image ? item.image.width / item.image.height : 1;
          let sources = [];
          let breakpoints = {
            "2200px": 900,
            "1600px": 600,
            "900px": 400,
            "0px": 600,
          };
          sources = Object.entries(breakpoints).map(([breakpoint, width]) => ({
            breakpoint,
            image: item.image,
            ratio: ratio,
            width,
          }));

          return (
            <>
              {index === 3 && (
                <li class="list-toggle-desktop">
                  <button data-trigger-style-grid arial-label="Raster">
                    <Image src={iconGrid} alt="Icon Raster" />
                  </button>
                  <button data-trigger-style-list aria-label="Liste">
                    <Image src={iconList} alt="Icon Liste" />
                  </button>
                </li>
              )}
              <li>
                <a href={item.uri}>
                  <div class="image border-2">
                    <CustomPicture
                      sources={sources}
                      fallback={{
                        src: item.image.src,
                        width: 1200,
                        ratio: ratio,
                      }}
                      alt={item.image.alt}
                      lazy={index > 3}
                    />
                    <div class="text-mobile-bu bg-grey-caption inline-flex px-1.5 absolute bottom-0 left-0">{`${item.customer} - ${item.projectname}`}</div>
                  </div>
                  <div class="title">
                    <div class="customer">{item.customer}</div>
                    <div class="name">{item.projectname}</div>
                  </div>
                </a>
              </li>
            </>
          );
        })
      }
      {
        page.content.overlay && (
          <li class="add-project-wrapper" data-overlay-open>
            <div class="add-project">
              <span class="fd-subbold">+</span>
              <div
                class="fd-sublight md:fd-copy pt-0.5"
                set:html={page.content.overlay.button}
              />
            </div>
          </li>
        )
      }
    </ul>
  </div>
</Wrapper>
<script>
  document.addEventListener("astro:page-load", () => {
    const triggerStyleList = document.querySelectorAll(
      "[data-trigger-style-list]"
    );
    const triggerStyleGrid = document.querySelectorAll(
      "[data-trigger-style-grid]"
    );

    triggerStyleList.forEach((button) => {
      button.addEventListener("click", () => {
        document.querySelector("[data-list]").classList.remove("grid");
      });
    });

    triggerStyleGrid.forEach((button) => {
      button.addEventListener("click", () => {
        document.querySelector("[data-list]").classList.add("grid");
      });
    });

    const openOverlay = document.querySelectorAll("[data-overlay-open]");
    openOverlay.forEach((button) => {
      button.addEventListener("click", () => {
        document
          .querySelector(".overlay-wrapper")
          .classList.remove("overlay-hidden");
      });
    });

    const closeOverlay = document.querySelectorAll("[data-overlay-close]");
    closeOverlay.forEach((button) => {
      button.addEventListener("click", () => {
        document
          .querySelector(".overlay-wrapper")
          .classList.add("overlay-hidden");
      });
    });
  });
</script>

<style>
  .headline {
    @screen md {
      margin-bottom: 2rem;
    }
  }
  .headline:has(+ .grid) {
    @screen md {
      position: absolute;
      margin-bottom: 0;
    }
  }
  .list-toggle-mobile {
    margin-bottom: 2rem;
    width: 100%;
    display: grid;
    grid-template-columns: repeat(2, minmax(0, 1fr));
    column-gap: 1.25rem;

    @screen md {
      display: none;
    }

    .buttons {
      height: 100%;
      display: flex;
      justify-content: space-between;
      aspect-ratio: 163/122;

      @media (min-width: 391px) {
        aspect-ratio: auto;
      }

      @media (min-width: 404px) {
        justify-content: flex-start;
        column-gap: 1.25rem;
      }
    }

    img {
      height: 100%;
    }
  }
  .project-list {
    margin-top: 1.25rem;
    display: flex;
    flex-direction: column;
    row-gap: 0.75rem;

    @screen md {
      margin-top: 0;
    }
  }

  .placeholder {
    display: none;
  }

  .list-toggle-desktop {
    display: none;

    @screen md {
      display: block;
      position: absolute;
      right: 0;
    }
  }
  .grid .list-toggle-desktop {
    display: none;

    @screen md {
      display: block;
      position: relative;
    }
  }

  .grid .placeholder {
    display: none;

    @screen md {
      display: block;
      visibility: hidden;
      aspect-ratio: 422/324;
      width: 100%;
      height: 100%;
    }
  }

  .project-list .title {
    display: flex;
    column-gap: 0.5rem;
    align-items: flex-end;

    @screen md {
      column-gap: 1.5rem;
    }

    .customer {
      font-family: theme(fontFamily.nationalCompressedExtrabold);
      white-space: nowrap;
      font-size: 1.875rem;
      line-height: 2.125rem;
      text-transform: uppercase;

      @screen md {
        column-gap: 1.5rem;
        font-size: 50px;
        line-height: 60px;
      }

      @screen lg {
        font-size: 5.625rem;
        line-height: 6.375rem;
      }
    }

    .name {
      white-space: nowrap;
      overflow: hidden;
      text-overflow: ellipsis;
      font-family: theme(fontFamily.ppeditorialnew);
      font-size: 1.5625rem;
      line-height: 28px;

      @screen md {
        font-size: 2.875rem;
        line-height: 3.1875rem;
      }

      @screen lg {
        font-size: 4.75rem;
        line-height: 5.1875rem;
      }
    }
  }

  .project-list .image {
    display: none;
    position: relative;
  }

  .grid {
    display: flex;
    flex-direction: column;
    row-gap: 1.75rem;

    @screen md {
      display: grid;
      grid-template-columns: repeat(4, minmax(0, 1fr));
      gap: var(--gap);
    }
  }

  .grid .image {
    display: block;

    img {
      @screen md {
        aspect-ratio: 422/315;
        width: 100%;
        height: 100%;
        object-fit: cover;
      }
    }
  }
  .grid .title {
    display: none;
  }

  .add-project {
    display: inline-flex;
    column-gap: 0.25rem;
    background-color: var(--color-white-transparent);
    border: 2px solid var(--color-black);
    padding: 0.25rem 1rem 0.175rem 1rem;
    cursor: pointer;

    @screen md {
      column-gap: 1rem;
    }

    @screen lg {
      border-width: 4px;
      padding: 0.625rem 1.375rem;
    }

    div,
    span {
      display: inline;
    }

    div {
      @screen md {
        padding-top: 0.6875rem;
      }
    }
  }

  .grid .add-project {
    @screen md {
      display: flex;
      align-items: center;
      height: 100%;
      aspect-ratio: 422/324;
    }
  }
</style>
